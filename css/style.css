/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */
html {
  color: #222;
  font-size: 1em;
  line-height: 1.4; }

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * These selection rule sets have to be separate.
 * Customize the background color to match your design.
 */
::-moz-selection {
  background: #b3d4fc;
  text-shadow: none; }

::selection {
  background: #b3d4fc;
  text-shadow: none; }

/*
 * A better looking default horizontal rule
 */
hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */
audio, canvas, iframe, img, svg, video {
  vertical-align: middle; }

/*
 * Remove default fieldset styles.
 */
fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

/*
 * Allow only vertical resizing of textareas.
 */
textarea {
  resize: vertical; }

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */
.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

/* Generated by Font Squirrel (http://www.fontsquirrel.com) on January 21, 2015 */
@font-face {
  font-family: 'montserratregular';
  src: url('../fonts/montserrat-regular-webfont.eot');
  src: url('../fonts/montserrat-regular-webfont.eot?#iefix') format('embedded-opentype'), url('../fonts/montserrat-regular-webfont.woff2') format('woff2'), url('../fonts/montserrat-regular-webfont.woff') format('woff'), url('../fonts/montserrat-regular-webfont.ttf') format('truetype'), url('../fonts/montserrat-regular-webfont.svg#montserratregular') format('svg');
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'montserrathairline';
  src: url('../fonts/montserrat-hairline-webfont.eot');
  src: url('../fonts/montserrat-hairline-webfont.eot?#iefix') format('embedded-opentype'), url('../fonts/montserrat-hairline-webfont.woff2') format('woff2'), url('../fonts/montserrat-hairline-webfont.woff') format('woff'), url('../fonts/montserrat-hairline-webfont.ttf') format('truetype'), url('../fonts/montserrat-hairline-webfont.svg#montserrathairline') format('svg');
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'montserratlight';
  src: url('../fonts/montserrat-light-webfont.eot');
  src: url('../fonts/montserrat-light-webfont.eot?#iefix') format('embedded-opentype'), url('../fonts/montserrat-light-webfont.woff2') format('woff2'), url('../fonts/montserrat-light-webfont.woff') format('woff'), url('../fonts/montserrat-light-webfont.ttf') format('truetype'), url('../fonts/montserrat-light-webfont.svg#montserratlight') format('svg');
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'montserratbold';
  src: url('../fonts/montserrat-bold-webfont.eot');
  src: url('../fonts/montserrat-bold-webfont.eot?#iefix') format('embedded-opentype'), url('../fonts/montserrat-bold-webfont.woff2') format('woff2'), url('../fonts/montserrat-bold-webfont.woff') format('woff'), url('../fonts/montserrat-bold-webfont.ttf') format('truetype'), url('../fonts/montserrat-bold-webfont.svg#montserratbold') format('svg');
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'montserratblack';
  src: url('../fonts/montserrat-black-webfont.eot');
  src: url('../fonts/montserrat-black-webfont.eot?#iefix') format('embedded-opentype'), url('../fonts/montserrat-black-webfont.woff2') format('woff2'), url('../fonts/montserrat-black-webfont.woff') format('woff'), url('../fonts/montserrat-black-webfont.ttf') format('truetype'), url('../fonts/montserrat-black-webfont.svg#montserratblack') format('svg');
  font-weight: normal;
  font-style: normal; }

/* ==========================================================================
   Base
   ========================================================================== */
html {
  height: 100%; }

body {
  margin: 0;
  font-family: "Open Sans";
  height: 100%; }

img {
  max-width: 100%; }

h2 {
  font-family: montserratbold;
  text-transform: uppercase;
  text-align: center;
  color: #353535; }

label {
  display: block;
  color: #ffffff;
  line-height: 1.5em; }

input, textarea {
  display: block;
  border: 1px solid #333;
  width: 100%;
  font-size: 16px;
  font-family: "Open Sans";
  margin-bottom: 1em;
  -webkit-appearance: none;
  padding: .5em;
  box-sizing: border-box; }

button, .button {
  border: 1px solid #ffffff;
  padding: 1em;
  color: #ffffff;
  text-transform: uppercase;
  font-family: montserratlight;
  text-decoration: none;
  text-align: center;
  width: 8em;
  margin: 0 auto;
  display: block;
  transition: border 400ms, color 400ms;
  background-color: transparent; }

/* ==========================================================================
   Layout
   ========================================================================== */
#wrapper {
  min-height: 100%; }

.container {
  max-width: 75em;
  margin-left: auto;
  margin-right: auto; }
  .container:after {
    content: " ";
    display: block;
    clear: both; }

#footerwrapper {
  height: 3.25em; }

/* ==========================================================================
   Modules
   ========================================================================== */
#header {
  background-color: #ffffff; }

.logo {
  font-family: montserratbold;
  color: #1d3f4f;
  text-transform: uppercase;
  margin: 0;
  padding-top: 2px;
  text-align: center; }

@media only screen and (min-width: 30em) {
  .logo {
    box-sizing: border-box;
    width: 25%;
    float: left;
    
    
    padding-left: 2.08333%;
    padding-right: 2.08333%;
    text-align: left; } }

.logo span {
  color: #d1d8dc;
  padding-left: 0;
  transition: padding-left 400ms; }

.logo:hover span {
  padding-left: .25em;
  transition: padding-left 400ms; }

.logo a:link, .logo a:hover, .logo a:visited {
  color: #1d3f4f;
  text-decoration: none; }

#header nav ul {
  margin: 0;
  padding: 0; }

@media only screen and (min-width: 30em) {
  #header nav {
    box-sizing: border-box;
    width: 75%;
    float: left;
    
    
    padding-left: 2.08333%;
    padding-right: 2.08333%; }
  #header nav ul {
    float: right;
    padding: .75em 0; } }

#header nav li {
  list-style: none; }

@media only screen and (min-width: 30em) {
  #header nav li {
    display: inline-block; } }

#header nav a {
  padding: 1.1em;
  text-decoration: none;
  font-family: montserratlight;
  text-transform: uppercase;
  color: #353535;
  font-size: .9em;
  transition: background-color 400ms, color 400ms ease 100ms;
  display: block;
  text-align: center; }

@media only screen and (min-width: 30em) {
  #header nav a {
    text-align: left;
    display: inline; } }

#header nav a:hover {
  background: #1d3f4f;
  color: #ffffff;
  transition: background-color 400ms, color 400ms ease 100ms; }

.masthead {
  background-color: #1d3f4f;
  padding: 3em 0;
  min-height: 15em;
  z-index: 999; }

.masthead h1 {
  color: #ffffff;
  text-transform: uppercase;
  font-family: montserratbold;
  text-align: center; }

.button:hover, button:hover {
  border: 1px solid #d1d8dc;
  color: #d1d8dc;
  transition: border 400ms, color 400ms; }

.button-hover-dark:hover {
  border: 1px solid #1d3f4f;
  color: #1d3f4f;
  transition: border 400ms, color 400ms; }

@media only screen and (min-width: 30em) {
  .info .tagline {
    margin-left: 16.66667%;
    box-sizing: border-box;
    width: 66.66667%;
    float: left;
    
    
    padding-left: 2.08333%;
    padding-right: 2.08333%;
    text-align: center;
    margin-bottom: 2em; }
  .info .column {
    box-sizing: border-box;
    width: 33.33333%;
    float: left;
    
    
    padding-left: 2.08333%;
    padding-right: 2.08333%;
    padding-top: 2em;
    padding-bottom: 2em; }
  .info .column:last-child {
    box-sizing: border-box;
    width: 33.33333%;
    float: right;
    
    
    padding-left: 2.08333%;
    padding-right: 2.08333%; }
  .info p {
    font-size: 14px; }
  .info h3 {
    text-align: center;
    font-family: montserratbold;
    text-transform: uppercase;
    font-size: 1em; } }

.info {
  padding: 4em 0; }

.info .fa-stack {
  font-size: 3em;
  margin: auto;
  display: block;
  color: #1d3f4f; }

.info .fa-stack-1x {
  color: #ffffff; }

.clients {
  background-color: #f6f6f6;
  padding: 4em 0; }

.clients ul {
  margin: 4em 0 0 0;
  padding: 0; }

.clients li {
  list-style: none; }

@media only screen and (min-width: 30em) {
  .clients {
    padding-left: 2.08333%;
    padding-right: 2.08333%; }
  .clients li {
    box-sizing: border-box;
    width: 33.33333%;
    float: left;
    
    
    padding-left: 2.08333%;
    padding-right: 2.08333%;
    margin-bottom: 2.08333%; }
    .clients li:nth-child(3n+1) {
      
      
      margin-left: 0;
      margin-right: -100%;
      
      
      clear: both; }
    .clients li:nth-child(3n+2) {
      
      
      margin-left: 33.33333%;
      margin-right: -100%;
      
      
      clear: none; }
    .clients li:nth-child(3n+3) {
      
      
      margin-left: 66.66667%;
      margin-right: -100%;
      
      
      clear: none; } }

.clients img {
  transition: box-shadow 400ms; }

.clients img:hover {
  box-shadow: 2px 2px 2px #eee;
  transition: box-shadow 400ms; }

@media only screen and (min-width: 30em) {
  .case-study .column {
    box-sizing: border-box;
    width: 50%;
    float: left;
    
    
    padding-left: 2.08333%;
    padding-right: 2.08333%; } }

#footer {
  min-height: 12.5em;
  background-color: #1d3f4f;
  color: #ffffff;
  font-family: montserratlight; }

@media only screen and (min-width: 30em) {
  #footer .column {
    box-sizing: border-box;
    width: 25%;
    float: left;
    
    
    padding-left: 2.08333%;
    padding-right: 2.08333%; } }

#footer h3 {
  font-family: montserratbold;
  color: #ffffff;
  text-transform: uppercase;
  font-size: 1em;
  letter-spacing: 2px; }

#footer .fa {
  color: #ffffff; }

#footer a {
  font-family: montserratlight;
  text-decoration: none;
  color: #ffffff;
  font-size: .9em; }

.recent-posts {
  list-style: none;
  margin: 0;
  padding: 0;
  font-size: .9em; }

.recent-posts time {
  display: block;
  font-size: .75em;
  margin-bottom: 1em;
  color: #d1d8dc; }

#subfooter {
  min-height: 2.5em;
  background-color: #071b24;
  color: #ffffff; }

#subfooter p {
  margin: 0;
  padding: 1.5em;
  font-family: montserratlight;
  font-size: .75em;
  text-transform: uppercase; }

/************************************************
    Contact
************************************************/
.contact {
  background-color: #1d3f4f;
  color: #ffffff;
  padding: 4em 0; }

.contact .col-1 {
  box-sizing: border-box;
  width: 50%;
  float: left;
  
  
  padding-left: 2.08333%;
  padding-right: 2.08333%; }

.contact .col-2 {
  box-sizing: border-box;
  width: 33.33333%;
  float: right;
  
  
  padding-left: 2.08333%;
  padding-right: 2.08333%;
  margin-left: 8.33333%;
  
  
  margin-right: 8.33333%; }

.contact a {
  text-decoration: none;
  color: #ffffff;
  font-size: .9em; }

.contact h2 {
  color: #ffffff; }

/* ==========================================================================
   Helper classes
   ========================================================================== */
/*
 * Hide visually and from screen readers:
 * http://juicystudio.com/article/screen-readers-display-none.php
 */
.hidden {
  display: none !important;
  visibility: hidden; }

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */
.visuallyhidden.focusable:active, .visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto; }

/*
 * Hide visually and from screen readers, but maintain layout
 */
.invisible {
  visibility: hidden; }

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
.clearfix:before, .clearfix:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.clearfix:after {
  clear: both; }

.center {
  display: block;
  margin: 0 auto; }

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */
@media print {
  *, *:before, *:after {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster:
                                   http://www.sanbeiji.com/archives/953 */
    box-shadow: none !important;
    text-shadow: none !important; }
  a, a:visited {
    text-decoration: underline; }
  a[href]:after {
    content: " (" attr(href) ")"; }
  abbr[title]:after {
    content: " (" attr(title) ")"; }
  /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */
  a[href^="#"]:after, a[href^="javascript:"]:after {
    content: ""; }
  pre, blockquote {
    border: 1px solid #999;
    page-break-inside: avoid; }
  /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */
  thead {
    display: table-header-group; }
  tr, img {
    page-break-inside: avoid; }
  img {
    max-width: 100% !important; }
  p, h2, h3 {
    orphans: 3;
    widows: 3; }
  h2, h3 {
    page-break-after: avoid; } }


/*# sourceMappingURL=data:application/json;base64, */